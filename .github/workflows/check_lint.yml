name: Checks

on:
  push:
    branches:
      - main
      - test
      - dev
  pull_request:
    branches:
      - main
      - test
      - dev

env:
  CACHE_VERSION: 1
  KEY_PREFIX: base-venv
  DEFAULT_PYTHON: "3.10"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare base dependencies
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    outputs:
      python-key: ${{ steps.generate-python-key.outputs.key }}
      pre-commit-key: ${{ steps.generate-pre-commit-key.outputs.key }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.1
      - name: Set up Python3.10
        id: python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.10.13
      - name: Generate Python key
        id: generate-python-key
        run: echo "::set-output name=key::$(date +%Y%m%d)-${{ env.CACHE_VERSION }}-${{ env.KEY_PREFIX }}"
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.0
        with:
          path: venv
          key: >-
            ${{ runner.os }}-${{ steps.python.outputs.python-version }}-${{
            steps.prepare.outputs.python-key }}
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -U pip setuptools wheel
          pip install -U -r requirements.txt

  install-dependencies:
    runs-on: ubuntu-22.04
    needs: prepare
    steps:
    - name: Add universe repository
      run: sudo add-apt-repository universe

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-black pylint mypy isort
        
  pylint:
    runs-on: ubuntu-22.04
    needs: install-dependencies
    steps:
      - name: Run pylint
        run: pylint **/*.py
      
  mypy:
    runs-on: ubuntu-22.04
    needs: install-dependencies
    steps:
      - name: Run mypy
        run: mypy **/*.py
      
  black:
    runs-on: ubuntu-22.04
    needs: install-dependencies
    steps:
      - name: Run black
        run: black --check .
      
  isort:
    runs-on: ubuntu-22.04
    needs: install-dependencies
    steps:
      - name: Run isort
        run: isort --check-only .
